{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\eventman_student\\\\src\\\\pages\\\\StudentDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport SideBar from '../components/SideBar';\nimport EventList from '../components/EventList';\nimport { eventService } from '../services/eventService';\nimport { authService } from '../services/authService';\nimport { sampleEvents } from '../data/sampleEvents';\nimport './StudentDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [filters, setFilters] = useState({\n    location: '',\n    teamSize: '',\n    eventType: ''\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  useEffect(() => {\n    applyFilters();\n  }, [events, filters]);\n  const fetchEvents = async () => {\n    try {\n      setLoading(true);\n      const fetchedEvents = await eventService.getAllEvents();\n\n      // If no events from Firebase, use sample data\n      if (fetchedEvents.length === 0) {\n        setEvents(sampleEvents);\n      } else {\n        setEvents(fetchedEvents);\n      }\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      // Fallback to sample data on error\n      setEvents(sampleEvents);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const applyFilters = () => {\n    let filtered = events;\n    if (filters.location) {\n      filtered = filtered.filter(event => event.location && event.location.toLowerCase().includes(filters.location.toLowerCase()));\n    }\n    if (filters.teamSize) {\n      filtered = filtered.filter(event => event.teamSize && event.teamSize === filters.teamSize);\n    }\n    if (filters.eventType) {\n      filtered = filtered.filter(event => event.type && event.type.toLowerCase() === filters.eventType.toLowerCase());\n    }\n    setFilteredEvents(filtered);\n  };\n  const handleFilterChange = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n  };\n  const handleLogout = async () => {\n    try {\n      await authService.logout();\n      // Redirect to login page or handle logout\n      console.log('Logged out successfully');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n  const handleRegister = async eventId => {\n    try {\n      // Get current user data (this would normally come from auth context)\n      const studentData = {\n        id: 'current_user_id',\n        name: 'Current User',\n        email: 'student@example.com'\n      };\n      await eventService.registerForEvent(eventId, studentData);\n      console.log('Successfully registered for event:', eventId);\n      // Show success message or update UI\n    } catch (error) {\n      console.error('Error registering for event:', error);\n      // Show error message\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading events...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {\n        filters: filters,\n        onFilterChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"events-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Current events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), filteredEvents.length > 0 ? /*#__PURE__*/_jsxDEV(EventList, {\n          events: filteredEvents,\n          onRegister: handleRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-events\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No events match your current filters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"G74vJaVI/tbzQxYmPyEosBD5vig=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Header","SideBar","EventList","eventService","authService","sampleEvents","jsxDEV","_jsxDEV","StudentDashboard","_s","events","setEvents","filteredEvents","setFilteredEvents","filters","setFilters","location","teamSize","eventType","loading","setLoading","fetchEvents","applyFilters","fetchedEvents","getAllEvents","length","error","console","filtered","filter","event","toLowerCase","includes","type","handleFilterChange","filterType","value","prev","handleLogout","logout","log","handleRegister","eventId","studentData","id","name","email","registerForEvent","className","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","onRegister","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/eventman_student/src/pages/StudentDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport SideBar from '../components/SideBar';\nimport EventList from '../components/EventList';\nimport { eventService } from '../services/eventService';\nimport { authService } from '../services/authService';\nimport { sampleEvents } from '../data/sampleEvents';\nimport './StudentDashboard.css';\n\nconst StudentDashboard = () => {\n  const [events, setEvents] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [filters, setFilters] = useState({\n    location: '',\n    teamSize: '',\n    eventType: ''\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  useEffect(() => {\n    applyFilters();\n  }, [events, filters]);\n\n  const fetchEvents = async () => {\n    try {\n      setLoading(true);\n      const fetchedEvents = await eventService.getAllEvents();\n\n      // If no events from Firebase, use sample data\n      if (fetchedEvents.length === 0) {\n        setEvents(sampleEvents);\n      } else {\n        setEvents(fetchedEvents);\n      }\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      // Fallback to sample data on error\n      setEvents(sampleEvents);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const applyFilters = () => {\n    let filtered = events;\n\n    if (filters.location) {\n      filtered = filtered.filter(event =>\n        event.location && event.location.toLowerCase().includes(filters.location.toLowerCase())\n      );\n    }\n\n    if (filters.teamSize) {\n      filtered = filtered.filter(event =>\n        event.teamSize && event.teamSize === filters.teamSize\n      );\n    }\n\n    if (filters.eventType) {\n      filtered = filtered.filter(event =>\n        event.type && event.type.toLowerCase() === filters.eventType.toLowerCase()\n      );\n    }\n\n    setFilteredEvents(filtered);\n  };\n\n  const handleFilterChange = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n  };\n\n  const handleLogout = async () => {\n    try {\n      await authService.logout();\n      // Redirect to login page or handle logout\n      console.log('Logged out successfully');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  const handleRegister = async (eventId) => {\n    try {\n      // Get current user data (this would normally come from auth context)\n      const studentData = {\n        id: 'current_user_id',\n        name: 'Current User',\n        email: 'student@example.com'\n      };\n\n      await eventService.registerForEvent(eventId, studentData);\n      console.log('Successfully registered for event:', eventId);\n      // Show success message or update UI\n    } catch (error) {\n      console.error('Error registering for event:', error);\n      // Show error message\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"dashboard-container\">\n        <Header onLogout={handleLogout} />\n        <div className=\"loading-container\">\n          <p>Loading events...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Header onLogout={handleLogout} />\n\n      <div className=\"main-content\">\n        <SideBar\n          filters={filters}\n          onFilterChange={handleFilterChange}\n        />\n\n        <main className=\"events-content\">\n          <h2>Current events</h2>\n\n          {filteredEvents.length > 0 ? (\n            <EventList\n              events={filteredEvents}\n              onRegister={handleRegister}\n            />\n          ) : (\n            <div className=\"no-events\">\n              <p>No events match your current filters.</p>\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default StudentDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}